#!/bin/sh
#
# external_rules_command

#
# Absolute path to the command used to retrieve rule consequences.
# The command will receive the following arguments: window ID, class
# name, instance name, and intermediate consequences. The output of
# that command must have the following format: key1=value1
# key2=value2 ...  (the valid key/value pairs are given in the
# description of the rule command).
#
#
# Rule
#    General Syntax
# 	   rule COMMANDS
#
#    Commands
# 	   -a, --add (<class_name>|*)[:(<instance_name>|*)] [-o|--one-shot]
# 	   [monitor=MONITOR_SEL|desktop=DESKTOP_SEL|node=NODE_SEL]
# 	   [state=STATE] [layer=LAYER] [split_dir=DIR] [split_ratio=RATIO]
# 	   [(hidden|sticky|private|locked|marked|center|follow|manage|focus|border)=(on|off)]
# 	   [rectangle=WxH+X+Y]
# 		   Create a new rule.
#
# 	   -r, --remove
# 	   ^<n>|head|tail|(<class_name>|*)[:(<instance_name>|*)]...
# 		   Remove the given rules.
#
# 	   -l, --list
# 		   List the rules.

border= \
  center= \
  class=$2
desktop= \
  focus= \
  follow= \
  hidden= \
  id=${1?} \
  instance=$3 \
  layer= \
  locked= \
  manage= \
  marked= \
  misc=$4 \
  monitor= \
  node= \
  private= \
  rectangle= \
  split_dir= \
  split_ratio= \
  state= \
  sticky= \
  urgent=

desktop_code="1"
desktop_browser="2"
desktop_todo="3"
desktop_doc="4"
desktop_misc="5"
desktop_stack="6"

code() {
  state=tiled
  # desktop=$desktop_code       -- alasan di ganti karena annoying
}

code2() {
  state=floating
  desktop=$desktop_todo # alasan di ganti karena annoying
}

browser() {
  desktop=$desktop_browser
}

musiclho() {
  desktop=$desktop_misc
}

chatting() {
  desktop=$desktop_misc
}

todo() {
  state=tiled
  desktop=$desktop_todo
}

misc() {
  desktop=$desktop_misc
}

misc_floating() {
  state=floating
}

misc_yazi_floating() {
  state=floating
  rectangle=1500x900+0+0 # set default size window
  center=true
}

spotify() {
  desktop=$desktop_misc
}

pdfile() {
  state=tiled
  desktop=$desktop_doc
}

###############################################################################
# custom
###############################################################################

xcalc() {
  state=floating
  layer=normal
}

xmessage() {
  state=floating
  layer=normal
}

libreoffice() {
  state=floating
  desktop=$desktop_doc
}

zathura() {
  state=floating
  rectangle=850x700+1030+350 # --- sudut window
  focus=off
  # desktop=$desktop_doc
}

videos() {
  state=floating
  desktop=$desktop_doc
}

mplayer() {
  state=floating
  layer=normal
}

mpv() {
  # state=tiled
  # desktop=$desktop_misc
  state=floating
  focus=off
  sticky=off
  layer=normal
}

pinentry_gtk_2() {
  state=floating
  layer=above
}

stj1() {
  state=floating
  layer=above
  sticky=on
}

signal() {
  state=floating
  layer=above
}

svix() {
  state=floating
  layer=above
  focus=off
}

file_manager() {
  desktop=$desktop_stack
  focus=on
  follow=on
}

stack() {
  desktop=$desktop_stack
}

case $instance.$class in
*.vlc) misc_floating ;;
*.Gitk) misc ;;
*.Pidgin) misc ;;
*.[Ss]xiv) svix ;;
*.Gimp) misc ;;
*.todoist-nativefier-6c11dd) todo ;;
*.notiontheall-in-oneworkspaceforyournotestaskswikisanddatabases-nativefier-46aee8) todo ;;
*.Pinentry-gtk-2) pinentry_gtk_2 ;;
*.Signal) signal ;;
*.[Oo]bsidian) pdfile ;;
*.XCalc) xcalc ;;
*.[gG]nome-calendar) xcalc ;;
*.Xmessage) xmessage ;;
*.Chromium) browser ;;
*.zen-beta) browser ;;
*.zen) browser ;;
*.Zen.Browser) browser ;;
*.Navigator) browser ;;
*.Spotify) spotify ;;
*.xdman-Main) xcalc ;;
*.SimpleScreenRecorder) videos ;;
*.[Ff]irefox) browser ;;
*.firefox_firefox) browser ;;
*.mpv) mpv ;;
*.[zZ]athura) zathura ;;
*.Peek) misc_floating ;;
*.[vV]irt-manager) zathura ;;
*org.remmina.Remmina) misc ;;
stj*.st) stj1 ;;
*.TelegramDesktop) chatting ;;
# *.Visual Studio Code) chatting ;;
*.Nautilus) file_manager ;;
*.[cC]ode) code2 ;;
Code.*) code2 ;;
*.Code) code2 ;;
*.Emacs) code ;;
*.Postman) code ;;
*.java-lang-Thread) misc_floating ;;
*.if-select) misc_yazi_floating ;;
weechatw.*) chatting ;;
pomotroid.*) stack ;;
[lL]ibre[oO]ffice*) pdfile ;;
# [lL]ibre[oO]ffice-writ*) libreoffice ;;
# [lL]ibre[oO]ffice-writer) libreoffice ;;
.)
  case $(ps -p "$(xdo pid "$id")" -o comm= 2>/dev/null) in
  spotify) spotify ;;
  esac
  ;;

esac

echo \
  ${border:+"border=$border"} \
  ${center:+"center=$center"} \
  ${desktop:+"desktop=$desktop"} \
  ${focus:+"focus=$focus"} \
  ${follow:+"follow=$follow"} \
  ${hidden:+"hidden=$hidden"} \
  ${layer:+"layer=$layer"} \
  ${locked:+"locked=$locked"} \
  ${manage:+"manage=$manage"} \
  ${marked:+"marked=$marked"} \
  ${monitor:+"monitor=$monitor"} \
  ${node:+"node=$node"} \
  ${private:+"private=$private"} \
  ${rectangle:+"rectangle=$rectangle"} \
  ${split_dir:+"split_dir=$split_dir"} \
  ${split_ratio:+"split_ratio=$split_ratio"} \
  ${state:+"state=$state"} \
  ${sticky:+"sticky=$sticky"} \
  ${urgent:+"urgent=$urgent"}

# vim: set ft=sh
